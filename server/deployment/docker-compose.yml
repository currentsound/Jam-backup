version: '3'
services:
  server:
    image: registry.gitlab.com/jam-systems/jam/server:${CHANNEL}
    restart: always
    env_file: 
      - .env
    environment:
      - JAM_HOST
        LIVEKIT_KEY=${LIVEKIT_KEY}
        LIVEKIT_SECRET=${LIVEKIT_SECRET}
    labels:
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}_server.rule=Host(`${JAM_HOST}`)
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}_server.tls=true
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}_server.tls.certresolver=letsencrypt
      - traefik.enable=true
  redis:
    image: library/redis
    volumes:
      - "redis:/data"
    command: "redis-server --appendonly yes"
  traefik:
    hostname: traefik
    image: traefik
    restart: always
    command:
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--entryPoints.metrics.address=:8080"
      - "--certificatesResolvers.letsencrypt.acme.email=admin@${JAM_HOST}"
      - "--certificatesResolvers.letsencrypt.acme.storage=/acme/acme.json"
      - "--certificatesResolvers.letsencrypt.acme.httpChallenge.entryPoint=web"
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--metrics.prometheus.entryPoint=metrics"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.addEntryPointsLabels=true"
      - "--metrics.prometheus.addServicesLabels=true"
    labels:
      - traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)
      - traefik.http.routers.http-catchall.entrypoints=web
      - traefik.http.routers.http-catchall.middlewares=redirect-to-https@docker
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.enable=true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - acme:/acme
volumes:
  redis: {}
  acme: {}
